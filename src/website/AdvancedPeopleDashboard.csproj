<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>2.4</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.3" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Compile Remove="__tests__\__snapshots__\**" />
    <Content Remove="ClientApp\**" />
    <Content Remove="__tests__\__snapshots__\**" />
    <EmbeddedResource Remove="__tests__\__snapshots__\**" />
    <None Remove="__tests__\__snapshots__\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\actions\Builds.ts" />
    <None Remove="ClientApp\components\BuildWindows\index.tsx" />
    <None Remove="ClientApp\containers\BuildWindows\BuildWindow.tsx" />
    <None Remove="ClientApp\images\index.ts" />
    <None Remove="ClientApp\sagas\index.ts" />
    <None Remove="ClientApp\sagas\teamcity.ts" />
    <None Remove="ClientApp\utilities\Dictionary.ts" />
    <None Remove="ClientApp\utilities\index.ts" />
    <None Remove="ClientApp\utilities\Polling.ts" />
    <None Remove="__tests__\containers\BuildWindows\BuildWindow.test.tsx" />
    <None Remove="__tests__\empty-module.ts" />
    <None Remove="__tests__\reducers\Builds.ts" />
    <None Remove="__tests__\sagas\Teamcity.test.tsx" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\actions\Builds.ts" />
    <TypeScriptCompile Include="ClientApp\components\BuildWindows\TeamCityBuildWindow.tsx" />
    <TypeScriptCompile Include="ClientApp\components\BuildWindows\index.tsx" />
    <TypeScriptCompile Include="ClientApp\containers\BuildWindows\BuildWindow.tsx" />
    <TypeScriptCompile Include="ClientApp\css\index.tsx" />
    <TypeScriptCompile Include="ClientApp\images\index.ts" />
    <TypeScriptCompile Include="ClientApp\sagas\index.ts" />
    <TypeScriptCompile Include="ClientApp\sagas\TeamCity.ts" />
    <TypeScriptCompile Include="ClientApp\utilities\Dictionary.ts" />
    <TypeScriptCompile Include="ClientApp\utilities\Polling.ts" />
    <TypeScriptCompile Include="ClientApp\utilities\index.ts" />
    <TypeScriptCompile Include="__tests__\components\BuildWindows\BuildWindow.test.tsx" />
    <TypeScriptCompile Include="__tests__\consts\Builds.ts" />
    <TypeScriptCompile Include="__tests__\containers\BuildWindows\BuildWindow.test.tsx" />
    <TypeScriptCompile Include="__tests__\empty-module.ts" />
    <TypeScriptCompile Include="__tests__\sagas\index.test.tsx" />
    <TypeScriptCompile Include="__tests__\sagas\Teamcity.test.tsx" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="__tests__\components\BuildWindows\__snapshots__\" />
    <Folder Include="__tests__\containers\BuildWindows\__snapshots__\" />
    <Folder Include="__tests__\reducers\__snapshots__\" />
    <Folder Include="__tests__\sagas\__snapshots__\" />
  </ItemGroup>

  <Target Name="Cleanwwwroot" AfterTargets="Clean">
    <Message Importance="high" Text="Cleaning 'wwwroot' and 'ClientApp\dist' folders..." />
    <RemoveDir Directories="wwwroot; ClientApp\dist" />
	</Target>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm i --no-optional" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
